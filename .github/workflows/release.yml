name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            BINARY_NAME="${{ github.event.repository.name }}.exe"
            ARCHIVE_NAME="${{ github.event.repository.name }}-${{ matrix.target }}.zip"
            7z a "../../../$ARCHIVE_NAME" "$BINARY_NAME"
          else
            BINARY_NAME="${{ github.event.repository.name }}"
            ARCHIVE_NAME="${{ github.event.repository.name }}-${{ matrix.target }}.tar.gz"
            tar czf "../../../$ARCHIVE_NAME" "$BINARY_NAME"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.target }}
          path: ${{ github.event.repository.name }}-${{ matrix.target }}.*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifacts
        run: |
          find artifacts -name "*.*" -exec mv {} . \;

      - name: Generate checksums
        run: |
          sha256sum *.tar.gz *.zip > checksums.txt
          cat checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.zip
            checksums.txt
          body: |
            ## Release ${{ github.ref_name }}
            
            ### Downloads
            Download the appropriate binary for your platform:
            - **Linux x64**: `${{ github.event.repository.name }}-x86_64-unknown-linux-gnu.tar.gz`
            - **macOS x64**: `${{ github.event.repository.name }}-x86_64-apple-darwin.tar.gz`
            - **macOS ARM**: `${{ github.event.repository.name }}-aarch64-apple-darwin.tar.gz`
            - **Windows x64**: `${{ github.event.repository.name }}-x86_64-pc-windows-gnu.zip`
            
            ### Checksums
            Verify your download with the SHA256 checksums in `checksums.txt`.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}